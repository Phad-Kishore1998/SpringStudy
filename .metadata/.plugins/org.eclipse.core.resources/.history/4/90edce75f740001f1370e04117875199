package com.pokemon.solgario.week1introduction.introductionToSpringBoot;

import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/* This annotation is the starting point in the Application
 	Everything is a bean at the end.
 */
@SpringBootApplication
public class IntroductionToSpringBootApplication implements CommandLineRunner{

	Apple obj;
	
	public static void main(String[] args) {
		SpringApplication.run(IntroductionToSpringBootApplication.class, args);
		
		/* Basic way of creation in Java */
//		Apple obj = new Apple();
//		obj.eatApple();
		
//		obj.eatApple(); 
		/*
		now its given an error again saying even though the apple obj is at line 12
		we cannot use non static inside static method.
		So we implements interface commandLineRunner for run method which 
		we will @override in here below static void main
		*/
		
	}

	//Think it as a two main method all the args in main method are passed down to run
	@Override
	public void run(String... args) throws Exception {
		// TODO Auto-generated method stub
		/* Interface used to indicate that a bean should run 
		 * when it is contained within a SpringApplication. 
		 * Multiple CommandLineRunner beans can be defined 
		 * within the same application context and 
		 * can be ordered using the Orderedinterface or @Order annotation. 
		*/
		
		obj.eatApple();
		//1st Error: Null Pointer
		//it will give a null pointer exception as obj is not intantiate still
		//solution is to provide @Component to the Apple class
		//You can check the error by removing the @Componenet from the apple.
		
		//2nd Error: NullPointer
		//We will still get the error after adding the @Component to apple
		//As we haven't asked the application to injected the dependency of Apple inside the bean.
		
	}

}
