package com.pokemon.solgario.week1introduction.homework;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;

@SpringBootApplication
public class CakeApplication implements CommandLineRunner{	
		
		
		@Autowired
		CakeBaker cakeService;
		
		public static void main(String[] args) {
			SpringApplication.run(CakeApplication.class, args);
			
		}

		@Override
		public void run(String... args) throws Exception {
			// TODO Auto-generated method stub
			/* Interface used to indicate that a bean should run 
			 * when it is contained within a SpringApplication. 
			 * Multiple CommandLineRunner beans can be defined 
			 * within the same application context and 
			 * can be ordered using the Orderedinterface or @Order annotation. 
			*/
			
//			obj.eatApple();   //commented for DB service
			
			//1st Error: Null Pointer
			/*
				it will give a null pointer exception as obj is not intantiate still
				solution is to provide @Component to the Apple class
				You can check the error by removing the @Componenet from the apple.
			*/
			
			//2nd Error: NullPointer
			/*
				We will still get the error after adding the @Component to apple
				As we haven't asked the application to injected the dependency of Apple inside the bean.
				it is solved by adding @Autowired in the Apple object creation at 
				line 12 above the main mehtod
			*/
			//3rd Error: Two Bean found Apple.class and AppConfig.class
			/*
			 	When we run with App config we will get a error that two bean were found 
			 	and we required only one bean.
			 	Field obj in com.pokemon.solgario.week1introduction.introductionToSpringBoot.IntroductionToSpringBootApplication required a single bean, but 2 were found
			 	
			 	For this we will remove the @Component from the Class Apple.
			 */
			
			
			
			//For DB Service we have comment Apple line 46
			System.out.println(dbService.getData());
			
			//Currently we are tightly coupled with devDB
			//if we want to move the code to PRD env we have to change the code again.
			//To avoid changing the code we will do some configuration.
			
			/*
			  For this we create a interface DB and add one function getData.
			  and implement DevDB and Prod DB public fucntions for getData
			 * */
			
			//HomeWork Testing
			cakeService.bakeCake();
		}

	}


}
